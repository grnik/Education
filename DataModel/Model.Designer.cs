//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("EducationModel", "FK_Lesson_App", "App", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.App), "Lesson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.Lesson), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_Task_Lesson", "Lesson", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.Lesson), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.Task), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_TaskAnswere_Task", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.Task), "TaskAnswere", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.TaskAnswere), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_TaskAnswereCheck_TaskAnswere", "TaskAnswere", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.TaskAnswere), "TaskAnswereCheck", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.TaskAnswereCheck), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_TaskAnswereDate_TaskAnswere", "TaskAnswere", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.TaskAnswere), "TaskAnswereDate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.TaskAnswereDate), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_TaskAnswereEmail_TaskAnswere", "TaskAnswere", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.TaskAnswere), "TaskAnswereEmail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.TaskAnswereEmail), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_TaskAnswereFloat_TaskAnswere", "TaskAnswere", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.TaskAnswere), "TaskAnswereFloat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.TaskAnswereFloat), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_TaskAnswereInt_TaskAnswere", "TaskAnswere", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.TaskAnswere), "TaskAnswereInt", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.TaskAnswereInt), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_TaskAnswereSelect_TaskAnswere", "TaskAnswere", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.TaskAnswere), "TaskAnswereSelect", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.TaskAnswereSelect), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_TaskAnswereText_TaskAnswere", "TaskAnswere", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.TaskAnswere), "TaskAnswereText", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.TaskAnswereText), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_App_AppType", "AppType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.AppType), "App", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.App), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_Task_App", "App", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModel.App), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.Task), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_AuthorCourse_Author", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.Author), "AuthorCourse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.AuthorCourse), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_AuthorCourse_Course", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.Course), "AuthorCourse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.AuthorCourse), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_SubjectCourse_Course", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.Course), "SubjectCourse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.SubjectCourse), true)]
[assembly: EdmRelationshipAttribute("EducationModel", "FK_SubjectCourse_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataModel.Subject), "SubjectCourse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModel.SubjectCourse), true)]

#endregion

namespace DataModel
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class EducationEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект EducationEntities, используя строку соединения из раздела "EducationEntities" файла конфигурации приложения.
        /// </summary>
        public EducationEntities() : base("name=EducationEntities", "EducationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта EducationEntities.
        /// </summary>
        public EducationEntities(string connectionString) : base(connectionString, "EducationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта EducationEntities.
        /// </summary>
        public EducationEntities(EntityConnection connection) : base(connection, "EducationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<App> Apps
        {
            get
            {
                if ((_Apps == null))
                {
                    _Apps = base.CreateObjectSet<App>("Apps");
                }
                return _Apps;
            }
        }
        private ObjectSet<App> _Apps;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AppType> AppTypes
        {
            get
            {
                if ((_AppTypes == null))
                {
                    _AppTypes = base.CreateObjectSet<AppType>("AppTypes");
                }
                return _AppTypes;
            }
        }
        private ObjectSet<AppType> _AppTypes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Author> Authors
        {
            get
            {
                if ((_Authors == null))
                {
                    _Authors = base.CreateObjectSet<Author>("Authors");
                }
                return _Authors;
            }
        }
        private ObjectSet<Author> _Authors;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Course> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Course>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Course> _Courses;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Example> Examples
        {
            get
            {
                if ((_Examples == null))
                {
                    _Examples = base.CreateObjectSet<Example>("Examples");
                }
                return _Examples;
            }
        }
        private ObjectSet<Example> _Examples;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Lesson> Lessons
        {
            get
            {
                if ((_Lessons == null))
                {
                    _Lessons = base.CreateObjectSet<Lesson>("Lessons");
                }
                return _Lessons;
            }
        }
        private ObjectSet<Lesson> _Lessons;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswere> TaskAnsweres
        {
            get
            {
                if ((_TaskAnsweres == null))
                {
                    _TaskAnsweres = base.CreateObjectSet<TaskAnswere>("TaskAnsweres");
                }
                return _TaskAnsweres;
            }
        }
        private ObjectSet<TaskAnswere> _TaskAnsweres;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswereBool> TaskAnswereBools
        {
            get
            {
                if ((_TaskAnswereBools == null))
                {
                    _TaskAnswereBools = base.CreateObjectSet<TaskAnswereBool>("TaskAnswereBools");
                }
                return _TaskAnswereBools;
            }
        }
        private ObjectSet<TaskAnswereBool> _TaskAnswereBools;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswereCheck> TaskAnswereChecks
        {
            get
            {
                if ((_TaskAnswereChecks == null))
                {
                    _TaskAnswereChecks = base.CreateObjectSet<TaskAnswereCheck>("TaskAnswereChecks");
                }
                return _TaskAnswereChecks;
            }
        }
        private ObjectSet<TaskAnswereCheck> _TaskAnswereChecks;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswereDate> TaskAnswereDates
        {
            get
            {
                if ((_TaskAnswereDates == null))
                {
                    _TaskAnswereDates = base.CreateObjectSet<TaskAnswereDate>("TaskAnswereDates");
                }
                return _TaskAnswereDates;
            }
        }
        private ObjectSet<TaskAnswereDate> _TaskAnswereDates;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswereEmail> TaskAnswereEmails
        {
            get
            {
                if ((_TaskAnswereEmails == null))
                {
                    _TaskAnswereEmails = base.CreateObjectSet<TaskAnswereEmail>("TaskAnswereEmails");
                }
                return _TaskAnswereEmails;
            }
        }
        private ObjectSet<TaskAnswereEmail> _TaskAnswereEmails;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswereFloat> TaskAnswereFloats
        {
            get
            {
                if ((_TaskAnswereFloats == null))
                {
                    _TaskAnswereFloats = base.CreateObjectSet<TaskAnswereFloat>("TaskAnswereFloats");
                }
                return _TaskAnswereFloats;
            }
        }
        private ObjectSet<TaskAnswereFloat> _TaskAnswereFloats;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswereInt> TaskAnswereInts
        {
            get
            {
                if ((_TaskAnswereInts == null))
                {
                    _TaskAnswereInts = base.CreateObjectSet<TaskAnswereInt>("TaskAnswereInts");
                }
                return _TaskAnswereInts;
            }
        }
        private ObjectSet<TaskAnswereInt> _TaskAnswereInts;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswereSelect> TaskAnswereSelects
        {
            get
            {
                if ((_TaskAnswereSelects == null))
                {
                    _TaskAnswereSelects = base.CreateObjectSet<TaskAnswereSelect>("TaskAnswereSelects");
                }
                return _TaskAnswereSelects;
            }
        }
        private ObjectSet<TaskAnswereSelect> _TaskAnswereSelects;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TaskAnswereText> TaskAnswereTexts
        {
            get
            {
                if ((_TaskAnswereTexts == null))
                {
                    _TaskAnswereTexts = base.CreateObjectSet<TaskAnswereText>("TaskAnswereTexts");
                }
                return _TaskAnswereTexts;
            }
        }
        private ObjectSet<TaskAnswereText> _TaskAnswereTexts;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AuthorCourse> AuthorCourse
        {
            get
            {
                if ((_AuthorCourse == null))
                {
                    _AuthorCourse = base.CreateObjectSet<AuthorCourse>("AuthorCourse");
                }
                return _AuthorCourse;
            }
        }
        private ObjectSet<AuthorCourse> _AuthorCourse;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SubjectCourse> SubjectCourse
        {
            get
            {
                if ((_SubjectCourse == null))
                {
                    _SubjectCourse = base.CreateObjectSet<SubjectCourse>("SubjectCourse");
                }
                return _SubjectCourse;
            }
        }
        private ObjectSet<SubjectCourse> _SubjectCourse;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Apps. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToApps(App app)
        {
            base.AddObject("Apps", app);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AppTypes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAppTypes(AppType appType)
        {
            base.AddObject("AppTypes", appType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Authors. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAuthors(Author author)
        {
            base.AddObject("Authors", author);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Courses. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCourses(Course course)
        {
            base.AddObject("Courses", course);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Examples. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToExamples(Example example)
        {
            base.AddObject("Examples", example);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Lessons. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLessons(Lesson lesson)
        {
            base.AddObject("Lessons", lesson);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Subjects. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Tasks. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnsweres. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnsweres(TaskAnswere taskAnswere)
        {
            base.AddObject("TaskAnsweres", taskAnswere);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnswereBools. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnswereBools(TaskAnswereBool taskAnswereBool)
        {
            base.AddObject("TaskAnswereBools", taskAnswereBool);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnswereChecks. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnswereChecks(TaskAnswereCheck taskAnswereCheck)
        {
            base.AddObject("TaskAnswereChecks", taskAnswereCheck);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnswereDates. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnswereDates(TaskAnswereDate taskAnswereDate)
        {
            base.AddObject("TaskAnswereDates", taskAnswereDate);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnswereEmails. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnswereEmails(TaskAnswereEmail taskAnswereEmail)
        {
            base.AddObject("TaskAnswereEmails", taskAnswereEmail);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnswereFloats. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnswereFloats(TaskAnswereFloat taskAnswereFloat)
        {
            base.AddObject("TaskAnswereFloats", taskAnswereFloat);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnswereInts. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnswereInts(TaskAnswereInt taskAnswereInt)
        {
            base.AddObject("TaskAnswereInts", taskAnswereInt);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnswereSelects. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnswereSelects(TaskAnswereSelect taskAnswereSelect)
        {
            base.AddObject("TaskAnswereSelects", taskAnswereSelect);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TaskAnswereTexts. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTaskAnswereTexts(TaskAnswereText taskAnswereText)
        {
            base.AddObject("TaskAnswereTexts", taskAnswereText);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AuthorCourse. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAuthorCourse(AuthorCourse authorCourse)
        {
            base.AddObject("AuthorCourse", authorCourse);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SubjectCourse. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSubjectCourse(SubjectCourse subjectCourse)
        {
            base.AddObject("SubjectCourse", subjectCourse);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="App")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class App : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта App.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="appTypeID">Исходное значение свойства AppTypeID.</param>
        /// <param name="app1">Исходное значение свойства App1.</param>
        public static App CreateApp(global::System.Guid id, global::System.Guid appTypeID, global::System.Byte[] app1)
        {
            App app = new App();
            app.ID = id;
            app.AppTypeID = appTypeID;
            app.App1 = app1;
            return app;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AppTypeID
        {
            get
            {
                return _AppTypeID;
            }
            set
            {
                OnAppTypeIDChanging(value);
                ReportPropertyChanging("AppTypeID");
                _AppTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppTypeID");
                OnAppTypeIDChanged();
            }
        }
        private global::System.Guid _AppTypeID;
        partial void OnAppTypeIDChanging(global::System.Guid value);
        partial void OnAppTypeIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] App1
        {
            get
            {
                return StructuralObject.GetValidValue(_App1);
            }
            set
            {
                OnApp1Changing(value);
                ReportPropertyChanging("App1");
                _App1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("App1");
                OnApp1Changed();
            }
        }
        private global::System.Byte[] _App1;
        partial void OnApp1Changing(global::System.Byte[] value);
        partial void OnApp1Changed();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_Lesson_App", "Lesson")]
        public EntityCollection<Lesson> Lessons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lesson>("EducationModel.FK_Lesson_App", "Lesson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lesson>("EducationModel.FK_Lesson_App", "Lesson", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_App_AppType", "AppType")]
        public AppType AppType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppType>("EducationModel.FK_App_AppType", "AppType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppType>("EducationModel.FK_App_AppType", "AppType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppType> AppTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppType>("EducationModel.FK_App_AppType", "AppType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppType>("EducationModel.FK_App_AppType", "AppType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_Task_App", "Task")]
        public EntityCollection<Task> Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("EducationModel.FK_Task_App", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("EducationModel.FK_Task_App", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="AppType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AppType.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static AppType CreateAppType(global::System.Guid id, global::System.String name)
        {
            AppType appType = new AppType();
            appType.ID = id;
            appType.Name = name;
            return appType;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_App_AppType", "App")]
        public EntityCollection<App> App
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<App>("EducationModel.FK_App_AppType", "App");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<App>("EducationModel.FK_App_AppType", "App", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Author.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Author CreateAuthor(global::System.Guid id, global::System.String name)
        {
            Author author = new Author();
            author.ID = id;
            author.Name = name;
            return author;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_AuthorCourse_Author", "AuthorCourse")]
        public EntityCollection<AuthorCourse> AuthorCourse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorCourse>("EducationModel.FK_AuthorCourse_Author", "AuthorCourse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorCourse>("EducationModel.FK_AuthorCourse_Author", "AuthorCourse", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="AuthorCourse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthorCourse : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AuthorCourse.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="authorID">Исходное значение свойства AuthorID.</param>
        /// <param name="courseID">Исходное значение свойства CourseID.</param>
        public static AuthorCourse CreateAuthorCourse(global::System.Guid id, global::System.Guid authorID, global::System.Guid courseID)
        {
            AuthorCourse authorCourse = new AuthorCourse();
            authorCourse.ID = id;
            authorCourse.AuthorID = authorID;
            authorCourse.CourseID = courseID;
            return authorCourse;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AuthorID
        {
            get
            {
                return _AuthorID;
            }
            set
            {
                OnAuthorIDChanging(value);
                ReportPropertyChanging("AuthorID");
                _AuthorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorID");
                OnAuthorIDChanged();
            }
        }
        private global::System.Guid _AuthorID;
        partial void OnAuthorIDChanging(global::System.Guid value);
        partial void OnAuthorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                OnCourseIDChanging(value);
                ReportPropertyChanging("CourseID");
                _CourseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseID");
                OnCourseIDChanged();
            }
        }
        private global::System.Guid _CourseID;
        partial void OnCourseIDChanging(global::System.Guid value);
        partial void OnCourseIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_AuthorCourse_Author", "Author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("EducationModel.FK_AuthorCourse_Author", "Author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("EducationModel.FK_AuthorCourse_Author", "Author").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("EducationModel.FK_AuthorCourse_Author", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("EducationModel.FK_AuthorCourse_Author", "Author", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_AuthorCourse_Course", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EducationModel.FK_AuthorCourse_Course", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EducationModel.FK_AuthorCourse_Course", "Course").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EducationModel.FK_AuthorCourse_Course", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("EducationModel.FK_AuthorCourse_Course", "Course", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Course.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Course CreateCourse(global::System.Guid id, global::System.String name)
        {
            Course course = new Course();
            course.ID = id;
            course.Name = name;
            return course;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_AuthorCourse_Course", "AuthorCourse")]
        public EntityCollection<AuthorCourse> AuthorCourse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorCourse>("EducationModel.FK_AuthorCourse_Course", "AuthorCourse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorCourse>("EducationModel.FK_AuthorCourse_Course", "AuthorCourse", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_SubjectCourse_Course", "SubjectCourse")]
        public EntityCollection<SubjectCourse> SubjectCourse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubjectCourse>("EducationModel.FK_SubjectCourse_Course", "SubjectCourse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubjectCourse>("EducationModel.FK_SubjectCourse_Course", "SubjectCourse", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="Example")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Example : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Example.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="lessonID">Исходное значение свойства LessonID.</param>
        /// <param name="taskID">Исходное значение свойства TaskID.</param>
        public static Example CreateExample(global::System.Guid id, global::System.Guid lessonID, global::System.Guid taskID)
        {
            Example example = new Example();
            example.ID = id;
            example.LessonID = lessonID;
            example.TaskID = taskID;
            return example;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LessonID
        {
            get
            {
                return _LessonID;
            }
            set
            {
                OnLessonIDChanging(value);
                ReportPropertyChanging("LessonID");
                _LessonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LessonID");
                OnLessonIDChanged();
            }
        }
        private global::System.Guid _LessonID;
        partial void OnLessonIDChanging(global::System.Guid value);
        partial void OnLessonIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private global::System.Guid _TaskID;
        partial void OnTaskIDChanging(global::System.Guid value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Example1
        {
            get
            {
                return StructuralObject.GetValidValue(_Example1);
            }
            set
            {
                OnExample1Changing(value);
                ReportPropertyChanging("Example1");
                _Example1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Example1");
                OnExample1Changed();
            }
        }
        private global::System.Byte[] _Example1;
        partial void OnExample1Changing(global::System.Byte[] value);
        partial void OnExample1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="Lesson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lesson : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Lesson.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Lesson CreateLesson(global::System.Guid id, global::System.String name)
        {
            Lesson lesson = new Lesson();
            lesson.ID = id;
            lesson.Name = name;
            return lesson;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                OnCourseIDChanging(value);
                ReportPropertyChanging("CourseID");
                _CourseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseID");
                OnCourseIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CourseID;
        partial void OnCourseIDChanging(Nullable<global::System.Guid> value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LessonOrder
        {
            get
            {
                return _LessonOrder;
            }
            set
            {
                OnLessonOrderChanging(value);
                ReportPropertyChanging("LessonOrder");
                _LessonOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LessonOrder");
                OnLessonOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _LessonOrder;
        partial void OnLessonOrderChanging(Nullable<global::System.Int32> value);
        partial void OnLessonOrderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AppID
        {
            get
            {
                return _AppID;
            }
            set
            {
                OnAppIDChanging(value);
                ReportPropertyChanging("AppID");
                _AppID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppID");
                OnAppIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AppID;
        partial void OnAppIDChanging(Nullable<global::System.Guid> value);
        partial void OnAppIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_Lesson_App", "App")]
        public App App
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("EducationModel.FK_Lesson_App", "App").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("EducationModel.FK_Lesson_App", "App").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<App> AppReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("EducationModel.FK_Lesson_App", "App");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<App>("EducationModel.FK_Lesson_App", "App", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_Task_Lesson", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("EducationModel.FK_Task_Lesson", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("EducationModel.FK_Task_Lesson", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Subject.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Subject CreateSubject(global::System.Guid id, global::System.String name)
        {
            Subject subject = new Subject();
            subject.ID = id;
            subject.Name = name;
            return subject;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_SubjectCourse_Subject", "SubjectCourse")]
        public EntityCollection<SubjectCourse> SubjectCourse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubjectCourse>("EducationModel.FK_SubjectCourse_Subject", "SubjectCourse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubjectCourse>("EducationModel.FK_SubjectCourse_Subject", "SubjectCourse", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="SubjectCourse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubjectCourse : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SubjectCourse.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="subjectID">Исходное значение свойства SubjectID.</param>
        /// <param name="courseID">Исходное значение свойства CourseID.</param>
        public static SubjectCourse CreateSubjectCourse(global::System.Guid id, global::System.Guid subjectID, global::System.Guid courseID)
        {
            SubjectCourse subjectCourse = new SubjectCourse();
            subjectCourse.ID = id;
            subjectCourse.SubjectID = subjectID;
            subjectCourse.CourseID = courseID;
            return subjectCourse;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Guid _SubjectID;
        partial void OnSubjectIDChanging(global::System.Guid value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                OnCourseIDChanging(value);
                ReportPropertyChanging("CourseID");
                _CourseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseID");
                OnCourseIDChanged();
            }
        }
        private global::System.Guid _CourseID;
        partial void OnCourseIDChanging(global::System.Guid value);
        partial void OnCourseIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_SubjectCourse_Course", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EducationModel.FK_SubjectCourse_Course", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EducationModel.FK_SubjectCourse_Course", "Course").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EducationModel.FK_SubjectCourse_Course", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("EducationModel.FK_SubjectCourse_Course", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_SubjectCourse_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EducationModel.FK_SubjectCourse_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EducationModel.FK_SubjectCourse_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EducationModel.FK_SubjectCourse_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("EducationModel.FK_SubjectCourse_Subject", "Subject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Task.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="lessonID">Исходное значение свойства LessonID.</param>
        public static Task CreateTask(global::System.Guid id, global::System.Guid lessonID)
        {
            Task task = new Task();
            task.ID = id;
            task.LessonID = lessonID;
            return task;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LessonID
        {
            get
            {
                return _LessonID;
            }
            set
            {
                OnLessonIDChanging(value);
                ReportPropertyChanging("LessonID");
                _LessonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LessonID");
                OnLessonIDChanged();
            }
        }
        private global::System.Guid _LessonID;
        partial void OnLessonIDChanging(global::System.Guid value);
        partial void OnLessonIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Task1
        {
            get
            {
                return _Task1;
            }
            set
            {
                OnTask1Changing(value);
                ReportPropertyChanging("Task1");
                _Task1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Task1");
                OnTask1Changed();
            }
        }
        private global::System.String _Task1;
        partial void OnTask1Changing(global::System.String value);
        partial void OnTask1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaskOrder
        {
            get
            {
                return _TaskOrder;
            }
            set
            {
                OnTaskOrderChanging(value);
                ReportPropertyChanging("TaskOrder");
                _TaskOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskOrder");
                OnTaskOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _TaskOrder;
        partial void OnTaskOrderChanging(Nullable<global::System.Int32> value);
        partial void OnTaskOrderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AppID
        {
            get
            {
                return _AppID;
            }
            set
            {
                OnAppIDChanging(value);
                ReportPropertyChanging("AppID");
                _AppID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppID");
                OnAppIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AppID;
        partial void OnAppIDChanging(Nullable<global::System.Guid> value);
        partial void OnAppIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_Task_Lesson", "Lesson")]
        public Lesson Lesson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("EducationModel.FK_Task_Lesson", "Lesson").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("EducationModel.FK_Task_Lesson", "Lesson").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lesson> LessonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("EducationModel.FK_Task_Lesson", "Lesson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lesson>("EducationModel.FK_Task_Lesson", "Lesson", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswere_Task", "TaskAnswere")]
        public EntityCollection<TaskAnswere> TaskAnsweres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskAnswere>("EducationModel.FK_TaskAnswere_Task", "TaskAnswere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskAnswere>("EducationModel.FK_TaskAnswere_Task", "TaskAnswere", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_Task_App", "App")]
        public App App
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("EducationModel.FK_Task_App", "App").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("EducationModel.FK_Task_App", "App").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<App> AppReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<App>("EducationModel.FK_Task_App", "App");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<App>("EducationModel.FK_Task_App", "App", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswere")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswere : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswere.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="taskID">Исходное значение свойства TaskID.</param>
        public static TaskAnswere CreateTaskAnswere(global::System.Guid id, global::System.Guid taskID)
        {
            TaskAnswere taskAnswere = new TaskAnswere();
            taskAnswere.ID = id;
            taskAnswere.TaskID = taskID;
            return taskAnswere;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private global::System.Guid _TaskID;
        partial void OnTaskIDChanging(global::System.Guid value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnswereOrder
        {
            get
            {
                return _AnswereOrder;
            }
            set
            {
                OnAnswereOrderChanging(value);
                ReportPropertyChanging("AnswereOrder");
                _AnswereOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnswereOrder");
                OnAnswereOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _AnswereOrder;
        partial void OnAnswereOrderChanging(Nullable<global::System.Int32> value);
        partial void OnAnswereOrderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Visible
        {
            get
            {
                return _Visible;
            }
            set
            {
                OnVisibleChanging(value);
                ReportPropertyChanging("Visible");
                _Visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visible");
                OnVisibleChanged();
            }
        }
        private Nullable<global::System.Int32> _Visible;
        partial void OnVisibleChanging(Nullable<global::System.Int32> value);
        partial void OnVisibleChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswere_Task", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("EducationModel.FK_TaskAnswere_Task", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("EducationModel.FK_TaskAnswere_Task", "Task").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("EducationModel.FK_TaskAnswere_Task", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("EducationModel.FK_TaskAnswere_Task", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereCheck_TaskAnswere", "TaskAnswereCheck")]
        public TaskAnswereCheck TaskAnswereCheck
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereCheck>("EducationModel.FK_TaskAnswereCheck_TaskAnswere", "TaskAnswereCheck").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereCheck>("EducationModel.FK_TaskAnswereCheck_TaskAnswere", "TaskAnswereCheck").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswereCheck> TaskAnswereCheckReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereCheck>("EducationModel.FK_TaskAnswereCheck_TaskAnswere", "TaskAnswereCheck");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswereCheck>("EducationModel.FK_TaskAnswereCheck_TaskAnswere", "TaskAnswereCheck", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereDate_TaskAnswere", "TaskAnswereDate")]
        public TaskAnswereDate TaskAnswereDate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereDate>("EducationModel.FK_TaskAnswereDate_TaskAnswere", "TaskAnswereDate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereDate>("EducationModel.FK_TaskAnswereDate_TaskAnswere", "TaskAnswereDate").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswereDate> TaskAnswereDateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereDate>("EducationModel.FK_TaskAnswereDate_TaskAnswere", "TaskAnswereDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswereDate>("EducationModel.FK_TaskAnswereDate_TaskAnswere", "TaskAnswereDate", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereEmail_TaskAnswere", "TaskAnswereEmail")]
        public TaskAnswereEmail TaskAnswereEmail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereEmail>("EducationModel.FK_TaskAnswereEmail_TaskAnswere", "TaskAnswereEmail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereEmail>("EducationModel.FK_TaskAnswereEmail_TaskAnswere", "TaskAnswereEmail").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswereEmail> TaskAnswereEmailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereEmail>("EducationModel.FK_TaskAnswereEmail_TaskAnswere", "TaskAnswereEmail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswereEmail>("EducationModel.FK_TaskAnswereEmail_TaskAnswere", "TaskAnswereEmail", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereFloat_TaskAnswere", "TaskAnswereFloat")]
        public TaskAnswereFloat TaskAnswereFloat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereFloat>("EducationModel.FK_TaskAnswereFloat_TaskAnswere", "TaskAnswereFloat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereFloat>("EducationModel.FK_TaskAnswereFloat_TaskAnswere", "TaskAnswereFloat").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswereFloat> TaskAnswereFloatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereFloat>("EducationModel.FK_TaskAnswereFloat_TaskAnswere", "TaskAnswereFloat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswereFloat>("EducationModel.FK_TaskAnswereFloat_TaskAnswere", "TaskAnswereFloat", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereInt_TaskAnswere", "TaskAnswereInt")]
        public TaskAnswereInt TaskAnswereInt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereInt>("EducationModel.FK_TaskAnswereInt_TaskAnswere", "TaskAnswereInt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereInt>("EducationModel.FK_TaskAnswereInt_TaskAnswere", "TaskAnswereInt").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswereInt> TaskAnswereIntReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereInt>("EducationModel.FK_TaskAnswereInt_TaskAnswere", "TaskAnswereInt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswereInt>("EducationModel.FK_TaskAnswereInt_TaskAnswere", "TaskAnswereInt", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereSelect_TaskAnswere", "TaskAnswereSelect")]
        public TaskAnswereSelect TaskAnswereSelect
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereSelect>("EducationModel.FK_TaskAnswereSelect_TaskAnswere", "TaskAnswereSelect").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereSelect>("EducationModel.FK_TaskAnswereSelect_TaskAnswere", "TaskAnswereSelect").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswereSelect> TaskAnswereSelectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereSelect>("EducationModel.FK_TaskAnswereSelect_TaskAnswere", "TaskAnswereSelect");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswereSelect>("EducationModel.FK_TaskAnswereSelect_TaskAnswere", "TaskAnswereSelect", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereText_TaskAnswere", "TaskAnswereText")]
        public TaskAnswereText TaskAnswereText
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereText>("EducationModel.FK_TaskAnswereText_TaskAnswere", "TaskAnswereText").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereText>("EducationModel.FK_TaskAnswereText_TaskAnswere", "TaskAnswereText").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswereText> TaskAnswereTextReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswereText>("EducationModel.FK_TaskAnswereText_TaskAnswere", "TaskAnswereText");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswereText>("EducationModel.FK_TaskAnswereText_TaskAnswere", "TaskAnswereText", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswereBool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswereBool : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswereBool.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="answere">Исходное значение свойства Answere.</param>
        public static TaskAnswereBool CreateTaskAnswereBool(global::System.Guid id, global::System.String answere)
        {
            TaskAnswereBool taskAnswereBool = new TaskAnswereBool();
            taskAnswereBool.ID = id;
            taskAnswereBool.Answere = answere;
            return taskAnswereBool;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answere
        {
            get
            {
                return _Answere;
            }
            set
            {
                if (_Answere != value)
                {
                    OnAnswereChanging(value);
                    ReportPropertyChanging("Answere");
                    _Answere = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Answere");
                    OnAnswereChanged();
                }
            }
        }
        private global::System.String _Answere;
        partial void OnAnswereChanging(global::System.String value);
        partial void OnAnswereChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Right
        {
            get
            {
                return _Right;
            }
            set
            {
                OnRightChanging(value);
                ReportPropertyChanging("Right");
                _Right = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Right");
                OnRightChanged();
            }
        }
        private Nullable<global::System.Boolean> _Right;
        partial void OnRightChanging(Nullable<global::System.Boolean> value);
        partial void OnRightChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswereCheck")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswereCheck : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswereCheck.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="answere">Исходное значение свойства Answere.</param>
        public static TaskAnswereCheck CreateTaskAnswereCheck(global::System.Guid id, global::System.String answere)
        {
            TaskAnswereCheck taskAnswereCheck = new TaskAnswereCheck();
            taskAnswereCheck.ID = id;
            taskAnswereCheck.Answere = answere;
            return taskAnswereCheck;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answere
        {
            get
            {
                return _Answere;
            }
            set
            {
                OnAnswereChanging(value);
                ReportPropertyChanging("Answere");
                _Answere = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Answere");
                OnAnswereChanged();
            }
        }
        private global::System.String _Answere;
        partial void OnAnswereChanging(global::System.String value);
        partial void OnAnswereChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Right
        {
            get
            {
                return _Right;
            }
            set
            {
                OnRightChanging(value);
                ReportPropertyChanging("Right");
                _Right = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Right");
                OnRightChanged();
            }
        }
        private Nullable<global::System.Boolean> _Right;
        partial void OnRightChanging(Nullable<global::System.Boolean> value);
        partial void OnRightChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereCheck_TaskAnswere", "TaskAnswere")]
        public TaskAnswere TaskAnswere
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereCheck_TaskAnswere", "TaskAnswere").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereCheck_TaskAnswere", "TaskAnswere").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswere> TaskAnswereReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereCheck_TaskAnswere", "TaskAnswere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereCheck_TaskAnswere", "TaskAnswere", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswereDate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswereDate : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswereDate.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="answere">Исходное значение свойства Answere.</param>
        public static TaskAnswereDate CreateTaskAnswereDate(global::System.Guid id, global::System.DateTime answere)
        {
            TaskAnswereDate taskAnswereDate = new TaskAnswereDate();
            taskAnswereDate.ID = id;
            taskAnswereDate.Answere = answere;
            return taskAnswereDate;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Answere
        {
            get
            {
                return _Answere;
            }
            set
            {
                OnAnswereChanging(value);
                ReportPropertyChanging("Answere");
                _Answere = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Answere");
                OnAnswereChanged();
            }
        }
        private global::System.DateTime _Answere;
        partial void OnAnswereChanging(global::System.DateTime value);
        partial void OnAnswereChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereDate_TaskAnswere", "TaskAnswere")]
        public TaskAnswere TaskAnswere
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereDate_TaskAnswere", "TaskAnswere").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereDate_TaskAnswere", "TaskAnswere").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswere> TaskAnswereReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereDate_TaskAnswere", "TaskAnswere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereDate_TaskAnswere", "TaskAnswere", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswereEmail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswereEmail : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswereEmail.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="email">Исходное значение свойства Email.</param>
        public static TaskAnswereEmail CreateTaskAnswereEmail(global::System.Guid id, global::System.String email)
        {
            TaskAnswereEmail taskAnswereEmail = new TaskAnswereEmail();
            taskAnswereEmail.ID = id;
            taskAnswereEmail.Email = email;
            return taskAnswereEmail;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereEmail_TaskAnswere", "TaskAnswere")]
        public TaskAnswere TaskAnswere
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereEmail_TaskAnswere", "TaskAnswere").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereEmail_TaskAnswere", "TaskAnswere").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswere> TaskAnswereReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereEmail_TaskAnswere", "TaskAnswere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereEmail_TaskAnswere", "TaskAnswere", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswereFloat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswereFloat : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswereFloat.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="answere">Исходное значение свойства Answere.</param>
        public static TaskAnswereFloat CreateTaskAnswereFloat(global::System.Guid id, global::System.Double answere)
        {
            TaskAnswereFloat taskAnswereFloat = new TaskAnswereFloat();
            taskAnswereFloat.ID = id;
            taskAnswereFloat.Answere = answere;
            return taskAnswereFloat;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Answere
        {
            get
            {
                return _Answere;
            }
            set
            {
                OnAnswereChanging(value);
                ReportPropertyChanging("Answere");
                _Answere = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Answere");
                OnAnswereChanged();
            }
        }
        private global::System.Double _Answere;
        partial void OnAnswereChanging(global::System.Double value);
        partial void OnAnswereChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereFloat_TaskAnswere", "TaskAnswere")]
        public TaskAnswere TaskAnswere
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereFloat_TaskAnswere", "TaskAnswere").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereFloat_TaskAnswere", "TaskAnswere").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswere> TaskAnswereReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereFloat_TaskAnswere", "TaskAnswere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereFloat_TaskAnswere", "TaskAnswere", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswereInt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswereInt : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswereInt.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="answere">Исходное значение свойства Answere.</param>
        public static TaskAnswereInt CreateTaskAnswereInt(global::System.Guid id, global::System.Int32 answere)
        {
            TaskAnswereInt taskAnswereInt = new TaskAnswereInt();
            taskAnswereInt.ID = id;
            taskAnswereInt.Answere = answere;
            return taskAnswereInt;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Answere
        {
            get
            {
                return _Answere;
            }
            set
            {
                OnAnswereChanging(value);
                ReportPropertyChanging("Answere");
                _Answere = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Answere");
                OnAnswereChanged();
            }
        }
        private global::System.Int32 _Answere;
        partial void OnAnswereChanging(global::System.Int32 value);
        partial void OnAnswereChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereInt_TaskAnswere", "TaskAnswere")]
        public TaskAnswere TaskAnswere
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereInt_TaskAnswere", "TaskAnswere").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereInt_TaskAnswere", "TaskAnswere").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswere> TaskAnswereReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereInt_TaskAnswere", "TaskAnswere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereInt_TaskAnswere", "TaskAnswere", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswereSelect")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswereSelect : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswereSelect.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="selectFrom">Исходное значение свойства SelectFrom.</param>
        public static TaskAnswereSelect CreateTaskAnswereSelect(global::System.Guid id, global::System.Int32 selectFrom)
        {
            TaskAnswereSelect taskAnswereSelect = new TaskAnswereSelect();
            taskAnswereSelect.ID = id;
            taskAnswereSelect.SelectFrom = selectFrom;
            return taskAnswereSelect;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SelectFrom
        {
            get
            {
                return _SelectFrom;
            }
            set
            {
                OnSelectFromChanging(value);
                ReportPropertyChanging("SelectFrom");
                _SelectFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SelectFrom");
                OnSelectFromChanged();
            }
        }
        private global::System.Int32 _SelectFrom;
        partial void OnSelectFromChanging(global::System.Int32 value);
        partial void OnSelectFromChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SelectTo
        {
            get
            {
                return _SelectTo;
            }
            set
            {
                OnSelectToChanging(value);
                ReportPropertyChanging("SelectTo");
                _SelectTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SelectTo");
                OnSelectToChanged();
            }
        }
        private Nullable<global::System.Int32> _SelectTo;
        partial void OnSelectToChanging(Nullable<global::System.Int32> value);
        partial void OnSelectToChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereSelect_TaskAnswere", "TaskAnswere")]
        public TaskAnswere TaskAnswere
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereSelect_TaskAnswere", "TaskAnswere").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereSelect_TaskAnswere", "TaskAnswere").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswere> TaskAnswereReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereSelect_TaskAnswere", "TaskAnswere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereSelect_TaskAnswere", "TaskAnswere", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EducationModel", Name="TaskAnswereText")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAnswereText : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TaskAnswereText.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="answere">Исходное значение свойства Answere.</param>
        public static TaskAnswereText CreateTaskAnswereText(global::System.Guid id, global::System.String answere)
        {
            TaskAnswereText taskAnswereText = new TaskAnswereText();
            taskAnswereText.ID = id;
            taskAnswereText.Answere = answere;
            return taskAnswereText;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answere
        {
            get
            {
                return _Answere;
            }
            set
            {
                OnAnswereChanging(value);
                ReportPropertyChanging("Answere");
                _Answere = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Answere");
                OnAnswereChanged();
            }
        }
        private global::System.String _Answere;
        partial void OnAnswereChanging(global::System.String value);
        partial void OnAnswereChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EducationModel", "FK_TaskAnswereText_TaskAnswere", "TaskAnswere")]
        public TaskAnswere TaskAnswere
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereText_TaskAnswere", "TaskAnswere").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereText_TaskAnswere", "TaskAnswere").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAnswere> TaskAnswereReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereText_TaskAnswere", "TaskAnswere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAnswere>("EducationModel.FK_TaskAnswereText_TaskAnswere", "TaskAnswere", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
